<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAEAIACoJQAAFgAAACgAAAAwAAAAYAAAAAEAIAAAAAAAgCUAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAABEk4AAAw8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQHOf8DBCLWAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFDAcMNf8GCiDIAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARSRMbRv8LDyDEAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAcjih8t
        Yf8GCR/MAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAADRQ3yhwtXv8BARjoDBIiOElWgwIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAFiZU9xcpVf8CBSH/Fy5n/yE6dug1RnZ2AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABMWrCrGzJm/yhJjP8GDC3/ITNj9iNAgf8GH1v/RFePogAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAA
        ADsAAAAAAAAAAwAAADIAAAAAExoyKz1Ukn4eK01VAAAAABsoSVofMmr/KD527yFCgf8EBx/tGyQ+XCox
        TZcYKlb2Gjl8/yEuUVQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAwETJQ5QIPIeIAAABJEzVR3QcVJfEAAQiJEBs//wYYPf8LGDv/AwUSsQYXLOIPGDfzFBw+9BQs
        Rf8HDhr5BQsh0gslOs4LFST2EyZQ/wUNKuAJExmJCQsXhwMECm8BAgZ4AAAAVwEAAHcAAACEBAcLfwAA
        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
        r08AAAAAnNflAYymwEV7osQ8bq/RWWKYuFdpg6kEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACKut8GebreGQAAAACj3O0Gca3JV1qTt2uPr80ji8XkIWmjxQgAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACcv+kDAAAAAAAAAAC78f8Ej8/eUE2XuWCHn8AHAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///////8AAP///////wAA////////
        AAD///5///8AAP///n///wAA///8f///AAD///x///8AAP///H///wAA///8H///AAD///wP//8AAP//
        +Af//wAA/8kQA///AAD/gAAAAf8AAP8AAAAB/wAA/wAAAAIHAAD/gAAAAAMAAP5/AADwAAAAwAAAACAA
        AACAAAAAAAAAAAAAAAAAPwAAAAAAAAHzAAAAAAAAAIEAAAgAAAAAgAAACAAAAAAAAAAAAAAAAQAAAICA
        AAABAAAAwAAAAAEDAADjAAAAAQAAAP4AAAABBAAA/gAAAAEAAAD8AAAAAYAAAPwAAAAAxwAA/CQAAAB/
        AAD8ecAAAP8AAPz4YAA5/wAA//wiAD//AAD/4QQAH/8AAP/gAAAf/wAA//wAAB//AAD//gAAH/8AAP//
        AAw//wAA//4APP//AAD//4AP//8AAP//5A///wAA///IH///AAD//9h///8AAP///////wAA////////
        AAA=
</value>
  </data>
</root>